---
openapi: 3.0.1
info:
  title: MyEcommerce.Services.IdentityService.API
  version: v1
paths:
  "/api/Account/ResetPassword":
    post:
      tags:
        - Account
      operationId: ResetPassword
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ResetPasswordRequestDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/ResetPasswordRequestDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ResetPasswordRequestDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ResetPasswordResponseDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/ResetPasswordResponseDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/ResetPasswordResponseDto"
  "/api/Account/ForgotPassword":
    post:
      tags:
        - Account
      operationId: ForgotPassword
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ForgotPasswordRequestDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/ForgotPasswordRequestDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ForgotPasswordRequestDto"
      responses:
        "200":
          description: Success
  "/api/Account/Me":
    get:
      tags:
        - Account
      operationId: Me
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/UserReadDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/UserReadDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/UserReadDto"
  "/api/Account/Logout":
    post:
      tags:
        - Account
      operationId: Logout
      responses:
        "200":
          description: Success
  "/api/Account/Login":
    post:
      tags:
        - Account
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginRequestDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/LoginRequestDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LoginRequestDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LoginResponseDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/LoginResponseDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/LoginResponseDto"
  "/api/Account/Register":
    post:
      tags:
        - Account
      operationId: Register
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisterRequestDto"
          text/json:
            schema:
              "$ref": "#/components/schemas/RegisterRequestDto"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RegisterRequestDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RegisterResponseDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/RegisterResponseDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/RegisterResponseDto"
  "/api/Auth":
    get:
      tags:
        - Auth
      responses:
        "200":
          description: Success
components:
  schemas:
    ResetPasswordRequestDto:
      required:
        - confirmPassword
        - email
        - password
        - token
      type: object
      properties:
        email:
          type: string
          format: email
        token:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
      additionalProperties: false
    FieldErrorDto:
      type: object
      properties:
        field:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    UserReadDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
      additionalProperties: false
    ResetPasswordResponseDto:
      type: object
      properties:
        fieldErrors:
          type: array
          items:
            "$ref": "#/components/schemas/FieldErrorDto"
          nullable: true
        user:
          "$ref": "#/components/schemas/UserReadDto"
      additionalProperties: false
    ForgotPasswordRequestDto:
      required:
        - email
      type: object
      properties:
        email:
          type: string
          format: email
      additionalProperties: false
    LoginRequestDto:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      additionalProperties: false
    LoginResponseDto:
      type: object
      properties:
        fieldErrors:
          type: array
          items:
            "$ref": "#/components/schemas/FieldErrorDto"
          nullable: true
        user:
          "$ref": "#/components/schemas/UserReadDto"
      additionalProperties: false
    RegisterRequestDto:
      required:
        - confirmPassword
        - email
        - password
        - username
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        confirmPassword:
          type: string
      additionalProperties: false
    RegisterResponseDto:
      type: object
      properties:
        fieldErrors:
          type: array
          items:
            "$ref": "#/components/schemas/FieldErrorDto"
          nullable: true
        user:
          "$ref": "#/components/schemas/UserReadDto"
      additionalProperties: false
