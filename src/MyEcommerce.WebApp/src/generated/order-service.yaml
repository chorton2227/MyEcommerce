openapi: 3.0.1
info:
  title: MyEcommerce.Services.OrderService.API
  version: v1
paths:
  /api/Orders:
    get:
      tags:
        - Orders
      operationId: GetAll
      parameters:
        - name: PageIndex
          in: query
          schema:
            type: integer
            format: int32
        - name: PageLimit
          in: query
          schema:
            type: integer
            format: int32
        - name: UserId
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PaginatedOrdersDto"
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedOrdersDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PaginatedOrdersDto"
    post:
      tags:
        - Orders
      operationId: CreateAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/OrderCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/OrderCreateDto"
      responses:
        "201":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderDto"
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDto"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderDto"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  "/api/Orders/{id}":
    get:
      tags:
        - Orders
      operationId: GetById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderDto"
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDto"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderDto"
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
components:
  schemas:
    OrderStatusDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    AddressDto:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        street1:
          type: string
          nullable: true
        street2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
      additionalProperties: false
    OrderItemDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        price:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        imageUrl:
          type: string
          nullable: true
        total:
          type: number
          format: double
      additionalProperties: false
    OrderDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        status:
          $ref: "#/components/schemas/OrderStatusDto"
        deliveryAddress:
          $ref: "#/components/schemas/AddressDto"
        orderDate:
          type: string
          format: date-time
        chargeId:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        total:
          type: number
          format: double
        orderItems:
          type: array
          items:
            $ref: "#/components/schemas/OrderItemDto"
          nullable: true
      additionalProperties: false
    PaginatedOrdersDto:
      type: object
      properties:
        pageIndex:
          type: integer
          format: int32
        pageLimit:
          type: integer
          format: int32
        totalOrders:
          type: integer
          format: int32
        hasMore:
          type: boolean
        orders:
          type: array
          items:
            $ref: "#/components/schemas/OrderDto"
          nullable: true
      additionalProperties: false
    OrderCreateDto:
      required:
        - chargeId
        - deliveryAddress
        - email
        - orderItems
      type: object
      properties:
        chargeId:
          type: string
        email:
          type: string
          format: email
        deliveryAddress:
          $ref: "#/components/schemas/AddressDto"
        orderItems:
          type: array
          items:
            $ref: "#/components/schemas/OrderItemDto"
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
